///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
//Initializes stats for Enhanced Powergaming Scripts - IWD: EE           //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

/*************************************************************************/
///////////////////////////////////////////////////////////////////////////
// Subtledoctor provided the following baseline code to assist in 
// creating new Spellstates to the splstate.ids file:
//
// ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELLSTATE_NAME~)) BEGIN
// 	  COPY_EXISTING ~splstate.ids~ ~override~
// 		COUNT_2DA_COLS cols
// 		READ_2DA_ENTRIES_NOW rows cols
// 		FOR (row = 1; row < rows; ++row) BEGIN
// 		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
// 		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
// 		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELLSTATE_NAME~) BEGIN
// 			SET splst_nm = %state_ind%
// 		  END
// 		END
// 	  BUT_ONLY
// 	END
// 
// 	ACTION_IF !(VARIABLE_IS_SET %splst_nm%) BEGIN
// 		LAF ds_sort_ids STR_VAR ids=splstate END
// 		LAF d5_resolve_state STR_VAR new_state_id = ~SPELLSTATE_NAME~ RET new_state_ind END
// 		OUTER_SET splst_nm = %new_state_ind%
// 	END 
//
// The code above is used throughout to add multiple new Spellstates to the game.
///////////////////////////////////////////////////////////////////////////
/*************************************************************************/

///////////////////////////////////////////////////////////////////////////
// Detectable Spells                                                     //
///////////////////////////////////////////////////////////////////////////
LAF detectable_spells END

///////////////////////////////////////////////////////////////////////////
// Adds States used in AI Scripts                                        //
///////////////////////////////////////////////////////////////////////////
APPEND ~STATE.IDS~ ~0x00000001 STATE_SLEEPING~				UNLESS ~0x00000001 STATE_SLEEPING~
APPEND ~STATE.IDS~ ~0x00000004 STATE_PANIC~					UNLESS ~0x00000004 STATE_PANIC~
APPEND ~STATE.IDS~ ~0x00000008 STATE_STUNNED~				UNLESS ~0x00000008 STATE_STUNNED~
APPEND ~STATE.IDS~ ~0x00000010 STATE_INVISIBLE~				UNLESS ~0x00000010 STATE_INVISIBLE~
APPEND ~STATE.IDS~ ~0x00000FC0 STATE_REALLY_DEAD~	   		UNLESS ~0x00000FC0 STATE_REALLY_DEAD~
APPEND ~STATE.IDS~ ~0x00001000 STATE_SILENCED~ 		   		UNLESS ~0x00001000 STATE_SILENCED~
APPEND ~STATE.IDS~ ~0x00002000 STATE_CHARMED~				UNLESS ~0x00002000 STATE_CHARMED~
APPEND ~STATE.IDS~ ~0x00004000 STATE_POISONED~ 				UNLESS ~0x00004000 STATE_POISONED~
APPEND ~STATE.IDS~ ~0x00008000 STATE_HASTED~				UNLESS ~0x00008000 STATE_HASTED~
APPEND ~STATE.IDS~ ~0x00040000 STATE_BLIND~					UNLESS ~0x00040000 STATE_BLIND~
APPEND ~STATE.IDS~ ~0x00080000 STATE_DISEASED~				UNLESS ~0x00080000 STATE_DISEASED~
APPEND ~STATE.IDS~ ~0x00200000 STATE_NONDETECTION~			UNLESS ~0x00200000 STATE_NONDETECTION~
APPEND ~STATE.IDS~ ~0x00400000 STATE_IMPROVEDINVISIBILITY~	UNLESS ~0x00400000 STATE_IMPROVEDINVISIBILITY~
APPEND ~STATE.IDS~ ~0x00100000 STATE_FEEBLEMINDED~			UNLESS ~0x00100000 STATE_FEEBLEMINDED~
APPEND ~STATE.IDS~ ~0x00400010 STATE_NOT_TARGETABLE~  		UNLESS ~0x00400010 STATE_NOT_TARGETABLE~
APPEND ~STATE.IDS~ ~0x00800000 STATE_BLESS~					UNLESS ~0x00800000 STATE_BLESS~
APPEND ~STATE.IDS~ ~0x02000000 STATE_DRAWUPONHOLYMIGHT~		UNLESS ~0x02000000 STATE_DRAWUPONHOLYMIGHT~
APPEND ~STATE.IDS~ ~0x40000000 STATE_MIRRORIMAGE~			UNLESS ~0x40000000 STATE_MIRRORIMAGE~
APPEND ~STATE.IDS~ ~0x80000000 STATE_CONFUSED~				UNLESS ~0x80000000 STATE_CONFUSED~
APPEND ~STATE.IDS~ ~0x8010202D STATE_DISABLED~	       		UNLESS ~0x8010202D STATE_DISABLED~
APPEND ~STATE.IDS~ ~0x80002006 STATE_NOT_APPROACHABLE~		UNLESS ~0x80002006 STATE_NOT_APPROACHABLE~

///////////////////////////////////////////////////////////////////////////
// Adds Action to Swap Items in AI Scripts                               //
///////////////////////////////////////////////////////////////////////////
APPEND ~action.ids~ ~34 UseItemAbility(S:Object*,O:Target*,I:Slot*SLOTS,I:Ability*)~ UNLESS ~34 UseItemAbility(S:Object*,O:Target*,I:Slot*SLOTS,I:Ability*)~

///////////////////////////////////////////////////////////////////////////
// Adds Stats used in AI Scripts                                         //
///////////////////////////////////////////////////////////////////////////
APPEND ~stats.ids~ ~110 CLERIC_ARMOR_OF_FAITH~                  UNLESS ~110 CLERIC_ARMOR_OF_FAITH~
APPEND ~stats.ids~ ~116 WIZARD_SPELL_DEFLECTION~                UNLESS ~116 WIZARD_SPELL_DEFLECTION~
APPEND ~stats.ids~ ~117 PROTECTION_FROM_EVIL~                   UNLESS ~117 PROTECTION_FROM_EVIL~
APPEND ~stats.ids~ ~118 TRUE_SIGHT~                             UNLESS ~118 TRUE_SIGHT~
APPEND ~stats.ids~ ~119 CLERIC_CHAOTIC_COMMANDS~                UNLESS ~119 CLERIC_CHAOTIC_COMMANDS~
APPEND ~stats.ids~ ~120 CLERIC_INSECT_PLAGUE~                   UNLESS ~120 CLERIC_INSECT_PLAGUE~
APPEND ~stats.ids~ ~121 CLERIC_BLADE_BARRIER~                   UNLESS ~121 CLERIC_BLADE_BARRIER~
APPEND ~stats.ids~ ~122 CLERIC_PHYSICAL_MIRROR~                 UNLESS ~122 CLERIC_PHYSICAL_MIRROR~
APPEND ~stats.ids~ ~123 CLERIC_SHIELD_OF_THE_ARCHONS~           UNLESS ~123 CLERIC_SHIELD_OF_THE_ARCHONS~
APPEND ~stats.ids~ ~124 CLERIC_REGENERATION~                    UNLESS ~124 CLERIC_REGENERATION~
APPEND ~stats.ids~ ~125 WIZARD_FIRE_SHIELD~                     UNLESS ~125 WIZARD_FIRE_SHIELD~
APPEND ~stats.ids~ ~126 WIZARD_PROTECTION_FROM_MAGIC_ENERGY~    UNLESS ~126 WIZARD_PROTECTION_FROM_MAGIC_ENERGY~
APPEND ~stats.ids~ ~127 WIZARD_MISLEAD~                         UNLESS ~127 WIZARD_MISLEAD~
APPEND ~stats.ids~ ~128 WIZARD_PROTECTION_FROM_MAGIC_WEAPONS~   UNLESS ~128 WIZARD_PROTECTION_FROM_MAGIC_WEAPONS~
APPEND ~stats.ids~ ~129 WIZARD_SPELL_TURNING~                   UNLESS ~129 WIZARD_SPELL_TURNING~
APPEND ~stats.ids~ ~130 WIZARD_PROTECTION_FROM_THE_ELEMENTS~    UNLESS ~130 WIZARD_PROTECTION_FROM_THE_ELEMENTS~
APPEND ~stats.ids~ ~131 CLERIC_FREE_ACTION~                     UNLESS ~131 CLERIC_FREE_ACTION~
APPEND ~stats.ids~ ~132 WIZARD_KHELBENS_WARDING_WHIP~           UNLESS ~132 WIZARD_KHELBENS_WARDING_WHIP~
APPEND ~stats.ids~ ~133 CLERIC_DEFENSIVE_HARMONY~               UNLESS ~133 CLERIC_DEFENSIVE_HARMONY~
APPEND ~stats.ids~ ~161 SCRIPTINGSTATE6~                        UNLESS ~161 SCRIPTINGSTATE6~
APPEND ~stats.ids~ ~162 WIZARD_SPELL_IMMUNITY~                  UNLESS ~162 WIZARD_SPELL_IMMUNITY~
APPEND ~stats.ids~ ~163 WIZARD_PROTECTION_FROM_ENERGY~          UNLESS ~163 WIZARD_PROTECTION_FROM_ENERGY~
APPEND ~stats.ids~ ~164 WIZARD_SPELL_TRAP~                      UNLESS ~164 WIZARD_SPELL_TRAP~
APPEND ~stats.ids~ ~165 WIZARD_IMPROVED_ALACRITY~               UNLESS ~165 WIZARD_IMPROVED_ALACRITY~
APPEND ~stats.ids~ ~176 WIZARD_PROTECTION_FROM_PETRIFICATION~   UNLESS ~176 WIZARD_PROTECTION_FROM_PETRIFICATION~
APPEND ~stats.ids~ ~177 WIZARD_SPELL_SHIELD~                    UNLESS ~177 WIZARD_SPELL_SHIELD~
APPEND ~stats.ids~ ~178 WIZARD_RESIST_FEAR~                     UNLESS ~178 WIZARD_RESIST_FEAR~
APPEND ~stats.ids~ ~179 WIZARD_PROTECTION_FROM_NORMAL_MISSILES~ UNLESS ~179 WIZARD_PROTECTION_FROM_NORMAL_MISSILES~
APPEND ~stats.ids~ ~180 WIZARD_GREATER_MALISON~                 UNLESS ~180 WIZARD_GREATER_MALISON~
APPEND ~stats.ids~ ~181 WIZARD_PROTECTION_FROM_NORMAL_WEAPONS~  UNLESS ~181 WIZARD_PROTECTION_FROM_NORMAL_WEAPONS~
APPEND ~stats.ids~ ~182 WIZARD_TENSERS_TRANSFORMATION~          UNLESS ~182 WIZARD_TENSERS_TRANSFORMATION~

///////////////////////////////////////////////////////////////////////////
// Adds Classes used in AI Scripts                                       //
///////////////////////////////////////////////////////////////////////////
APPEND ~class.ids~ ~223 WIGHT~                  				UNLESS ~223 WIGHT~

///////////////////////////////////////////////////////////////////////////
// Adds Raceses used in AI Scripts                                       //
///////////////////////////////////////////////////////////////////////////
APPEND ~race.ids~ ~163 MUMMY~		                            UNLESS ~163 MUMMY~

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States                                               //
// Block of code provided by subtledoctor                                //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

/*
///////////////////////////////////////////////////////////////////////////
// Add Web Spellstate                                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WEB~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WEB~) BEGIN
			SET web = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %web%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~WEB~ RET new_state_ind END
		OUTER_SET web = %new_state_ind%
	END

	ACTION_FOR_EACH web_list IN
				WIZARD_WEB
				FIGURINE_SPIDER_WEB
				MIMIC_WEB
				INNATE_SPIDER_WEB
			BEGIN
				LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%web_list%~ RET spell_res END
				ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
					COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
   					LPF CLONE_EFFECT INT_VAR match_opcode = 157 opcode = 328 parameter2 = %web% special = 1 END
				END
	END
	*/
///////////////////////////////////////////////////////////////////////////
// Update Regeneration Skills                                            //
///////////////////////////////////////////////////////////////////////////
ACTION_IF NOT sd_combat_skills BEGIN
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CLERIC_REGENERATION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CLERIC_REGENERATION~) BEGIN
			SET regen = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %regen%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~CLERIC_REGENERATION~ RET new_state_ind END
		OUTER_SET regen = %new_state_ind%
	END

	COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~
		GET_OFFSET_ARRAY ab_array SPL_V10_HEADERS
		SET remove_this = 0
		PHP_EACH ab_array AS int => ab_off BEGIN
			GET_OFFSET_ARRAY2 fx_array ab_off SPL_V10_HEAD_EFFECTS
			PHP_EACH fx_array AS int => fx_off BEGIN
				READ_SHORT fx_off fx_type
			  	READ_SHORT (fx_off + 0x08) fx_prof
			  	PATCH_IF (fx_type = 233) AND (fx_prof = 124) BEGIN
			    	SET remove_this = 1
			  	END
			END
		END
		PATCH_IF (remove_this = 1) BEGIN
			LPF CLONE_EFFECT INT_VAR match_opcode = 233 match_parameter2 = 124 opcode = 328 parameter2 = %regen% special = 1 END
		END
	BUT_ONLY
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for PnP Celestials                            //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF pnp_celestial BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Resist Cold                                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESIST_COLD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESIST_COLD~) BEGIN
			SET rst_cold = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rst_cold%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RESIST_COLD~ RET new_state_ind END
		OUTER_SET rst_cold = %new_state_ind%
	END

	COPY_EXISTING ~CA#RCOLD.SPL~ ~override~ 
   		LPF CLONE_EFFECT INT_VAR match_opcode = 28 opcode = 328 parameter2 = %rst_cold% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Minor Globe of Invulnerability                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MINOR_GLOBE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MINOR_GLOBE~) BEGIN
			SET mnr_glb = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnr_glb%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MINOR_GLOBE~ RET new_state_ind END
		OUTER_SET mnr_glb = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Globe of Invulnerability                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GLOBE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GLOBE~) BEGIN
			SET glb = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %glb%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~GLOBE~ RET new_state_ind END
		OUTER_SET glb = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Minor Spell Turning                            //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MINOR_SPELL_TURNING~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MINOR_SPELL_TURNING~) BEGIN
			SET mnr_spl_trn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnr_spl_trn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MINOR_SPELL_TURNING~ RET new_state_ind END
		OUTER_SET mnr_spl_trn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Spell Turning                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SPELL_TURNING~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SPELL_TURNING~) BEGIN
			SET spl_trn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %spl_trn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~SPELL_TURNING~ RET new_state_ind END
		OUTER_SET spl_trn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create and Assign Spell State for Emotion, Courage                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~EMOTION_COURAGE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~EMOTION_COURAGE~) BEGIN
			SET emt_crg = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %emt_crg%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~EMOTION_COURAGE~ RET new_state_ind END
		OUTER_SET emt_crg = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create and Assign Spell State for Emotion, Hope                       //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~EMOTION_HOPE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~EMOTION_HOPE~) BEGIN
			SET emt_hpe = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %emt_hpe%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~EMOTION_HOPE~ RET new_state_ind END
		OUTER_SET emt_hpe = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Mind Blank                                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MIND_BLANK~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MIND_BLANK~) BEGIN
			SET mnd_blnk = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mnd_blnk%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MIND_BLANK~ RET new_state_ind END
		OUTER_SET mnd_blnk = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Shield of Lathander                            //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SHIELD_OF_LATHANDER~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SHIELD_OF_LATHANDER~) BEGIN
			SET shld_lath = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %shld_lath%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~SHIELD_OF_LATHANDER~ RET new_state_ind END
		OUTER_SET shld_lath = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Righteous Magic                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RIGHTEOUS_MAGIC~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RIGHTEOUS_MAGIC~) BEGIN
			SET rght_mgc = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rght_mgc%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RIGHTEOUS_MAGIC~ RET new_state_ind END
		OUTER_SET rght_mgc = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Spell Protections                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_SPELL_PROT~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_SPELL_PROT~) BEGIN
			SET rmv_spl_prt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_spl_prt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_SPELL_PROT~ RET new_state_ind END
		OUTER_SET rmv_spl_prt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Combat Protections                    //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_COMBAT_PROT~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_COMBAT_PROT~) BEGIN
			SET rmv_cbt_prt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_cbt_prt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_COMBAT_PROT~ RET new_state_ind END
		OUTER_SET rmv_cbt_prt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Poisons                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_POISON~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_POISON~) BEGIN
			SET rmv_psn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_psn%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_POISON~ RET new_state_ind END
		OUTER_SET rmv_psn = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Restoration Spells                             //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESTORATION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESTORATION~) BEGIN
			SET rest = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rest%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RESTORATION~ RET new_state_ind END
		OUTER_SET rest = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Removing Disease                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~REMOVE_DISEASE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~REMOVE_DISEASE~) BEGIN
			SET rmv_ds = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rmv_ds%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~REMOVE_DISEASE~ RET new_state_ind END
		OUTER_SET rmv_ds = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Black Blade of Disaster                        //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~BLACK_BLADE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~BLACK_BLADE~) BEGIN
			SET blk_bld = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %blk_bld%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~BLACK_BLADE~ RET new_state_ind END
		OUTER_SET blk_bld = %new_state_ind%
	END

/*
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Casting a Spell                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CASTING_SPELL~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CASTING_SPELL~) BEGIN
			SET cst_spl = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %cst_spl%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~CASTING_SPELL~ RET new_state_ind END
		OUTER_SET cst_spl = %new_state_ind%
	END
*/

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Wizard Armor                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~MAGE_ARMOR~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~MAGE_ARMOR~) BEGIN
			SET mag_armor = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %mag_armor%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~MAGE_ARMOR~ RET new_state_ind END
		OUTER_SET mag_armor = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Greater Whirlwind                              //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~GREATER_WHIRLWIND~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~GREATER_WHIRLWIND~) BEGIN
			SET gtr_whirl = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %gtr_whirl%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~GREATER_WHIRLWIND~ RET new_state_ind END
		OUTER_SET gtr_whirl = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Critical Strike                                //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~CRITICAL_STRIKE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~CRITICAL_STRIKE~) BEGIN
			SET ctr_strk = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %ctr_strk%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~CRITICAL_STRIKE~ RET new_state_ind END
		OUTER_SET ctr_strk = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Hardiness                                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~HARDINESS~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~HARDINESS~) BEGIN
			SET hrdness = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %hrdness%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~HARDINESS~ RET new_state_ind END
		OUTER_SET hrdness = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Shock Weapon                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF stormlord BEGIN
		ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~SHOCK_WEAPON~)) BEGIN
		  COPY_EXISTING ~splstate.ids~ ~override~
			COUNT_2DA_COLS cols
			READ_2DA_ENTRIES_NOW rows cols
			FOR (row = 1; row < rows; ++row) BEGIN
			  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
			  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
			  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~SHOCK_WEAPON~) BEGIN
				SET shk_wnp = %state_ind%
			  END
			END
		  BUT_ONLY
		END

		ACTION_IF !(VARIABLE_IS_SET %shk_wnp%) BEGIN
			LAF ds_sort_ids STR_VAR ids=splstate END
			LAF d5_resolve_state STR_VAR new_state_id = ~SHOCK_WEAPON~ RET new_state_ind END
			OUTER_SET shk_wnp = %new_state_ind%
		END

		COPY_EXISTING ~MOSTL02.SPL~ ~override~
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %shk_wnp% special = 1 END
	END

ACTION_IF saa_hla BEGIN
///////////////////////////////////////////////////////////////////////////
// Create Spell State for Resist Magic                                   //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~RESIST_MAGIC~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~RESIST_MAGIC~) BEGIN
			SET rst_mgc = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %rst_mgc%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~RESIST_MAGIC~ RET new_state_ind END
		OUTER_SET rst_mgc = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for War Cry                                        //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~WAR_CRY~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~WAR_CRY~) BEGIN
			SET war_cry = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %war_cry%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~WAR_CRY~ RET new_state_ind END
		OUTER_SET war_cry = %new_state_ind%
	END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Assign New Spell States                                               //
// Block of code provided by subtledoctor                                //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Minor Globe of Invulnerability                     //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MINOR_GLOBE_OF_INVULNERABILITY~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 155 opcode = 328 parameter2 = %mnr_glb% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Globe of Invulnerability                           //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_GLOBE_OF_INVULNERABILITY~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 328 opcode = 328 parameter2 = %glb% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Minor Spell Turning                                //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MINOR_SPELL_TURNING~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %mnr_spl_trn% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Spell Turning                                      //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_SPELL_TURNING~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 233 opcode = 328 parameter2 = %spl_trn% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Mind Blank                                         //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_MIND_BLANK~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 106 opcode = 328 parameter2 = %mnd_blnk% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Shield of Lathander                                //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_GREATER_SHIELD_OF_LATHANDER~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 101 opcode = 328 parameter2 = %shld_lath% special = 1 END
	END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_SHIELD_OF_LATHANDER~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~
		  LPF CLONE_EFFECT INT_VAR match_opcode = 101 opcode = 328 parameter2 = %shld_lath% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Boon of Lathander                                  //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~LATHANDER_BOON~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = 74 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Emotion, Courage                                   //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_EMOTION_COURAGE~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = %emt_crg% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Emotion, Hope                                      //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_EMOTION_HOPE~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~
		  LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = %emt_hpe% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Righteous Magic                                    //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_RIGHTEOUS_MAGIC~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %rght_mgc% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to Draw Upon Holy Might                                     //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_DRAW_UPON_HOLY_MIGHT~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 44 opcode = 132 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Dispelling Spell Protections                  //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mosprt.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_spl_prt% timing = 0 duration = 6 END

	ACTION_FOR_EACH spell IN
			SPELL_THRUST
			SECRET_WORD
			PIERCE_MAGIC
			WARDING_WHIP
			RUBY_RAY_OF_REVERSAL
			PIERCE_SHIELD
			SPELL_STRIKE
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_%spell%~ RET spell_res END
			//PRINT ~Updating the following spell: %spell_res%~
			ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
				COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOSPRT" END
			END
		END

//////////////////////////////////////////////////////////////////////////
// Add State to track when Dispelling Combat Protections                //
//////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mocprt.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_cbt_prt% timing = 0 duration = 6 END

	// Breach
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_BREACH~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 insert_point = 0 STR_VAR resource = "MOCPRT" END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Removing Poisons                              //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mopois.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_psn% timing = 0 duration = 6 END

	ACTION_FOR_EACH poison_spell IN
			SPIN102 // Innate - Slow Poison
			SPIN201 // Innate - Neutralize Poison
			SPPR212 // Slow Poison
			SPPR404 // Neutralize Poison
			D5F1212 // FP - Slow Poison
			D5P1212 // FP - Slow Poison
			D5F1404 // FP - Neutralize Poison
			D5P1404 // FP - Neutralize Poison
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%poison_spell%.SPL~ BEGIN
				COPY_EXISTING ~%poison_spell%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOPOIS" END
			END
		END

	ACTION_FOR_EACH poison_item IN
			POTN17 // Elixir of Health
			POTN20 // Antidote
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%poison_item%.ITM~ BEGIN
				COPY_EXISTING ~%poison_item%.ITM~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOPOIS" END
			END
		END

///////////////////////////////////////////////////////////////////////////
// Add State to track when using Restoration Spells                      //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/morest.spl~ ~override~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rest% timing = 0 duration = 6 END

	ACTION_FOR_EACH restoration_spell IN
			CLERIC_LESSER_RESTORATION
			CLERIC_RESTORATION
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~%restoration_spell%~ RET spell_res END
			//PRINT ~Updating the following spell: %spell_res%~
			ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
				COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOREST" END
			END
		END

	ACTION_IF FILE_EXISTS_IN_GAME ~CA#RESTO.SPL~ BEGIN
		COPY_EXISTING ~CA#RESTO.SPL~ ~override~ 
			LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MOREST" END
	END

///////////////////////////////////////////////////////////////////////////
// Add State to track when Removing Diseases                             //
///////////////////////////////////////////////////////////////////////////
	COPY ~enhanced-powergaming-scripts/spl/mopois.spl~ ~override/mormvds.spl~
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 2 special = 1 parameter2 = %rmv_ds% timing = 0 duration = 6 END

	ACTION_FOR_EACH disease_spell IN
			CA#CDISE
			CA#CUDIS
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%disease_spell%.SPL~ BEGIN
				COPY_EXISTING ~%disease_spell%.SPL~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
			END
		END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_CURE_DISEASE~ RET spell_res END
	//PRINT ~Updating the following spell: %spell_res%~
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
			LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
	END

	ACTION_FOR_EACH disease_item IN
			POTN17 // Elixir of Health
		BEGIN
			ACTION_IF FILE_EXISTS_IN_GAME ~%disease_item%.ITM~ BEGIN
				COPY_EXISTING ~%disease_item%.ITM~ ~override~ 
					LPF ADD_SPELL_EFFECT INT_VAR opcode = 321 target = 2 timing = 0 STR_VAR resource = "MORMVDS" END
			END
		END
		
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Prayer                                             //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~BENEFICIAL_PRAYER~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~BENEFICIAL_PRAYER~) BEGIN
			SET bn_pryr = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF FILE_EXISTS_IN_GAME ~#PRAYERG.SPL~ BEGIN
		//PRINT ~Updating the following spell: #PRAYERG~
		COPY_EXISTING ~#PRAYERG.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = %bn_pryr% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Recitation                                         //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~BENEFICIAL_RECITATION~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~BENEFICIAL_RECITATION~) BEGIN
			SET bn_rctn = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF FILE_EXISTS_IN_GAME ~#RECITEG.SPL~ BEGIN
		//PRINT ~Updating the following spell: #RECITEG~
		COPY_EXISTING ~#RECITEG.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 54 opcode = 328 parameter2 = %bn_rctn% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Entropy Shield                                     //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~ENTROPY_SHIELD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~ENTROPY_SHIELD~) BEGIN
			SET ent_shd = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_ENTROPY_SHIELD~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		//PRINT ~Updating the following spell: %spell_res%~
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 0 opcode = 328 parameter2 = %ent_shd% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Stat to Negative Plane Protection                                 //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~CLERIC_NEGATIVE_PLANE_PROTECTION~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		//PRINT ~Updating the following spell: %spell_res%~
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 233 parameter2 = 158 special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Black Blade of Disaster                            //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_BLACK_BLADE_OF_DISASTER~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		//PRINT ~Updating the following spell: %spell_res%~
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 111 opcode = 328 parameter2 = %blk_bld% special = 1 END
	END

/*
///////////////////////////////////////////////////////////////////////////
// Add Spell State to ALL Spells showing Casting Spell                   //
///////////////////////////////////////////////////////////////////////////
	  COPY_EXISTING_REGEXP GLOB ~^.+\.spl$~ ~override~
	  	LPF ADD_SPELL_CFEFFECT INT_VAR opcode = 328 target = 1 timing = 0 parameter2 = %cst_spl% duration = 6 special = 1 END
	  	BUT_ONLY
*/

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Wizard Armors                                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_FOR_EACH armor IN
			ARMOR
			GHOST_ARMOR
			SPIRIT_ARMOR
		BEGIN
			LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WIZARD_%armor%~ RET spell_res END
			ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
				//PRINT ~Updating the following spell: %spell_res%~
				COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
					LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %mag_armor% special = 1 END
			END
		END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Greater Whirlwind                                  //
///////////////////////////////////////////////////////////////////////////
LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_GREATER_WHIRLWIND~ RET spell_res END
ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %gtr_whirl% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Critical Strike                                    //
///////////////////////////////////////////////////////////////////////////
LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_CRITICAL_STRIKE~ RET spell_res END
ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
	//PRINT ~Updating the following spell: %spell_res%~
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 282 opcode = 328 parameter2 = %ctr_strk% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Hardiness                                          //
///////////////////////////////////////////////////////////////////////////
LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_HARDINESS~ RET spell_res END
ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
	//PRINT ~Updating the following spell: %spell_res%~
	COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 87 opcode = 328 parameter2 = %hrdness% special = 1 END
END

ACTION_IF saa_hla BEGIN
///////////////////////////////////////////////////////////////////////////
// Add Spell State to Resist Magic                                       //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_RESIST_MAGIC~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		//PRINT ~Updating the following spell: %spell_res%~
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 166 opcode = 328 parameter2 = %rst_mgc% special = 1 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to War Cry                                            //
///////////////////////////////////////////////////////////////////////////
	LAF RES_NUM_OF_SPELL_NAME STR_VAR spell_name = ~WARRIOR_WAR_CRY~ RET spell_res END
	ACTION_IF FILE_EXISTS_IN_GAME ~%spell_res%.SPL~ BEGIN
		//PRINT ~Updating the following spell: %spell_res%~
		COPY_EXISTING ~%spell_res%.SPL~ ~override~ 
		  LPF CLONE_EFFECT INT_VAR match_opcode = 206 opcode = 328 parameter2 = %war_cry% special = 1 END
	END
END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Relentless Assault                                 //
///////////////////////////////////////////////////////////////////////////
ACTION_IF battle_master BEGIN
	//PRINT ~Updating the following spell: Relentless Assualt~
	COPY_EXISTING ~mobtm01.SPL~ ~override~ 
	  LPF CLONE_EFFECT INT_VAR match_opcode = 317 opcode = 328 parameter2 = %gtr_whirl% special = 1 END
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Smite                                     //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF pally_smite OR champion_wild BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Smite                                          //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PALLY_SMITE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PALLY_SMITE~) BEGIN
			SET ply_smt = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %ply_smt%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PALLY_SMITE~ RET new_state_ind END
		OUTER_SET ply_smt = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Paladin Smite                                      //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~MOPALC3.SPL~ BEGIN
		//PRINT ~Updating the following spell: Pally Smite~
		COPY_EXISTING ~MOPALC3.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %ply_smt% timing = 0 duration = 6 END
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Wrath of the Wild                                  //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF FILE_EXISTS_IN_GAME ~MOCHW03.SPL~ BEGIN
		//PRINT ~Updating the following spell: Wrath of the Wild~
		COPY_EXISTING ~MOCHW03.SPL~ ~override~ 
		  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %ply_smt% timing = 0 duration = 10 END
	END
	  
END

///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
// Create New Spell States for Psi Warrior                               //
///////////////////////////////////////////////////////////////////////////
///////////////////////////////////////////////////////////////////////////
ACTION_IF psi_warrior BEGIN

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Psionic Strike                                 //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PSIONIC_STRIKE~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PSIONIC_STRIKE~) BEGIN
			SET psi_strike = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %psi_strike%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PSIONIC_STRIKE~ RET new_state_ind END
		OUTER_SET psi_strike = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Create Spell State for Protective Field                               //
///////////////////////////////////////////////////////////////////////////
	ACTION_IF (FILE_CONTAINS_EVALUATED (~splstate.ids~ ~PROTECTIVE_FIELD~)) BEGIN
	  COPY_EXISTING ~splstate.ids~ ~override~
		COUNT_2DA_COLS cols
		READ_2DA_ENTRIES_NOW rows cols
		FOR (row = 1; row < rows; ++row) BEGIN
		  READ_2DA_ENTRY_FORMER rows row 1 ~state_name~
		  READ_2DA_ENTRY_FORMER rows row 0 ~state_ind~
		  PATCH_IF (~%state_name%~ STRING_EQUAL_CASE ~PROTECTIVE_FIELD~) BEGIN
			SET prot_fld = %state_ind%
		  END
		END
	  BUT_ONLY
	END

	ACTION_IF !(VARIABLE_IS_SET %prot_fld%) BEGIN
		LAF ds_sort_ids STR_VAR ids=splstate END
		LAF d5_resolve_state STR_VAR new_state_id = ~PROTECTIVE_FIELD~ RET new_state_ind END
		OUTER_SET prot_fld = %new_state_ind%
	END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Psionic Strike                                     //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~MOPSIC2.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %psi_strike% timing = 0 duration = 6 END

///////////////////////////////////////////////////////////////////////////
// Add Spell State to Protective Field                                   //
///////////////////////////////////////////////////////////////////////////
	COPY_EXISTING ~MOPSIC3.SPL~ ~override~ 
	  LPF ADD_SPELL_EFFECT INT_VAR opcode = 328 target = 1 special = 1 parameter2 = %prot_fld% timing = 0 duration = 60 END
END
CLEAR_IDS_MAP